{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,SAAS,IA2BX,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOH,EAAEI,cAAcf,MAAMgB,OAC1CC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAC7C,IAAIG,EAAQN,EAEZ,IAAK,IAAIO,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDtB,EAAcsB,EAAUD,GACrBE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAE,OAAO2B,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAE,OAAO6B,QAAQ,sBAAoBzB,QAAeC,MAAU,IAEhEmB,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nNotify.init({\n  useIcon: false,\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n  let delay = firstDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","Notify","init","useIcon","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","currentTarget","value","step","amount","delay1","position1","then","success","catch","failure"],"version":3,"file":"03-promises.e5302a7f.js.map"}